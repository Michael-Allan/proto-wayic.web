wayic.js/doc.task - Documentation in rough

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Data typing`
    ' Primitive types are named in lowercase, as for example ‘number’, while their corresponding
      Object wrapper types are named in title case, e.g. ‘Number’.  A formal parameter that
      is labeled as being of a primitive type (say ‘string’) is thereby declared to accept
      not only values of that type (string) but also references to its Object wrappers (String).

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Clarity`
    - next to function
        - next to delivering|implementing and maintaining the design
        - the clarity of the code has top priority
    - when in doubt about two programming choices that are more-or-less equal in functionality
        - choose the clearer of the two

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Code documentation`
    + Javadoc form
        - write the in-source API documentation in modified Javadoc form
            - even though they are unlikely to be separately rendered as such
        - except in the range of characters used
            - use the full range (if at all) only in the (typically) extensive documentation
              at file top and bottom
            - everywhere use a limited range
                - limiting to what is normally used in program comments
                - e.g. quoting: 'like so', or "so"
                           not: “like so”, or ‘so’
                - because it will be read there in close proximity to the source code, nowhere else

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Global namespacing`
    - namespacing for global declarations
        - example: the public program interface declared at window.wayic_read_readable
    + dot delimited namespacing
        - avoid it
        - example of dot delimited namespacing

              window.wayic.read.readable  (avoid this)

        - too hard for the programmer to publish the interface cleanly, without clobbering others
        - too hard for the waycaster (in way.js) to test for the presence of the interface cleanly
            - without tripping over *who knows what* undefined component of the name
              when the program happens to fail
            - then puzzling over the consequent error message
        - example of correction

              window.wayic_read_readable

    ────────────────────────────────────────────────────────────────────────────────────────────────────
    Modules`
    - namely
        - *script* elements with a *type* attribute of 'module'
        - *export* and *import* statements
            ( https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export
            ( https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import
    - unable to use in XML documents
        - such as, most notably, way declaration documents
        - Chrome bug
            ( https://bugs.chromium.org/p/chromium/issues/detail?id=717643
            - e.g. Chrome (65) gives a runtime error
                ' Module scripts in XML documents are currently not supported
                - referencing the bug report



                                     Copyright © 2017-2018 Michael Allan and contributors.  Licence MIT.
